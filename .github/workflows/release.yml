
# This is a basic workflow that is manually triggered

name: Release Qt

on:
  workflow_dispatch:
    inputs:
      archive_name:
        description: 'Archive name'
        default: 'qt-everywhere-src-5.15.2'
        required: true

jobs:
  make_archive:
    runs-on: ubuntu-latest
    env:
      WORK_DIR: "$HOME"

    steps:
      - uses: actions/checkout@v2

      - name: Get git-archive-all
        working-directory: ${{ env.WORK_DIR }}
        run: |
          git clone https://github.com/Kentzo/git-archive-all.git
          cd git-archive-all
          git checkout 1.23.0

      - name: "[All] Update submodules"
        run: git submodule update --init --recursive

      - name: Make archive
        working-directory: ${{ env.WORK_DIR }}
        run: tar --exclude-vcs -cJf qt-everywhere-src-5.15.2.tar.xz ./qt5
 #       run: ../git-archive-all/git_archive_all.py -v --force-submodules ${{ github.event.inputs.archive_name }}.tar.xz

      - name: Upload artifact     
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.inputs.archive_name }}.tar.xz
          path: ${{ env.WORK_DIR }}/${{ github.event.inputs.archive_name }}.tar.xz

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ env.WORK_DIR }}/${{ github.event.inputs.archive_name }}.tar.xz
          asset_name: ${{ github.event.inputs.archive_name }}.tar.xz
          asset_content_type: application/gzip
